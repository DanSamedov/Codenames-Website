services:
  mysql:
    image: mysql:8.0
    restart: always
    env_file: .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -uroot -p$${MYSQL_ROOT_PASSWORD}
      interval: 10s
      timeout: 5s
      retries: 3

  web:
    build:
      context: .
      dockerfile: codenames_app/Dockerfile
    command: >
      bash -c "/codenames/codenames_app/wait-for-it.sh mysql:3306 -- /codenames/codenames_app/wait-for-it.sh redis:6379 -- daphne -b 0.0.0.0 -p 8000 codenames.asgi:application"
    env_file: .env
    restart: always
    networks:
      - backend
      - frontend
    volumes:
      - static_volume:/codenames/codenames_app/staticfiles
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/up" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7.2-alpine
    restart: always
    env_file: .env
    command: redis-server --requirepass ${REDIS_PASSWORD} --bind 0.0.0.0
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} ping
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/codenames_app/static
      - certbot_www:/var/www/certbot
      - ./nginx/nginx-http.conf:/etc/nginx/conf.d/nginx.conf
      # - certbot_conf:/etc/letsencrypt
      # - ./nginx/ssl:/etc/nginx/ssl
      # - ./nginx/ssl/dhparam.pem:/etc/nginx/dhparam.pem
    depends_on:
      - web
    networks:
      - frontend
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    networks:
      - frontend
    depends_on:
      - nginx
    command: certonly --webroot -w /var/www/certbot --email danasamedov@email.com --agree-tos --no-eff-email -d codenames.samedov.org -d www.codenames.samedov.org --keep-until-expiring --noninteractive

volumes:
  mysql_data:
  redis_data:
  static_volume:
  certbot_www:
  certbot_conf:


networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge
