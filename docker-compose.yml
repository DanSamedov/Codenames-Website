services:
  mysql:
    image: mysql:8.0
    restart: always
    env_file: .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend
    healthcheck:
      test: mysqladmin ping -uroot -p$${MYSQL_ROOT_PASSWORD}
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build: .
    command: >
      bash -c "/codenames/wait-for-it.sh mysql:3306 -- /codenames/wait-for-it.sh redis:6379 -- daphne -b 0.0.0.0 -p 8000 codenames.asgi:application"
    env_file: .env
    restart: always
    networks:
      - backend
    volumes:
      - static_volume:/codenames/staticfiles
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/up" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:7.2-alpine
    restart: always
    env_file: .env
    command: redis-server --requirepass ${REDIS_PASSWORD} --bind 0.0.0.0
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} ping
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:1.29.0-alpine-slim
    container_name: codenames_nginx
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - static_volume:/var/www/static:ro
      - ./certbot/www:/var/www/certbot
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem:ro
    restart: always
    networks:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    container_name: codenames_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done'"

volumes:
  db_data:
  redis_data:
  static_volume:
  certbot_etc:


networks:
  backend:
    driver: bridge
    internal: true
  frontend:
    driver: bridge
